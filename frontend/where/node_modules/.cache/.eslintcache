[{"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/index.js":"1","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/App.js":"2","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Home.js":"3","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Register.js":"4","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Login.js":"5","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/BoardUser.js":"6","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Profile.js":"7","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/BoardAdmin.js":"8","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/auth.service.js":"9","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/user.service.js":"10","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/auth-header.js":"11","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/serviceWorker.js":"12"},{"size":330,"mtime":1638999419817,"results":"13","hashOfConfig":"14"},{"size":3203,"mtime":1639002509194,"results":"15","hashOfConfig":"14"},{"size":797,"mtime":1639002024052,"results":"16","hashOfConfig":"14"},{"size":5887,"mtime":1639001920685,"results":"17","hashOfConfig":"14"},{"size":4104,"mtime":1639001665365,"results":"18","hashOfConfig":"14"},{"size":882,"mtime":1639002121210,"results":"19","hashOfConfig":"14"},{"size":1028,"mtime":1639001954547,"results":"20","hashOfConfig":"14"},{"size":885,"mtime":1639002121216,"results":"21","hashOfConfig":"14"},{"size":830,"mtime":1638999668566,"results":"22","hashOfConfig":"14"},{"size":476,"mtime":1638999795105,"results":"23","hashOfConfig":"14"},{"size":238,"mtime":1638999717450,"results":"24","hashOfConfig":"14"},{"size":5907,"mtime":1639002726881,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hasxr8",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/index.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/App.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Home.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Register.js",["53"],"import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport validator from 'validator'\nimport AuthService from \"../services/auth.service\";\nimport isEmail from \"validator/es/lib/isEmail\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst validEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nconst vusername = (value) => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\n\nconst vpassword = (value) => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\nconst Register = (props) => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        setMessage(\"\");\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            AuthService.register(username, email, password).then(\n                (response) => {\n                    setMessage(response.data.message);\n                    setSuccessful(true);\n                },\n                (error) => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    setMessage(resMessage);\n                    setSuccessful(false);\n                }\n            );\n        }\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleRegister} ref={form}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                    validations={[required, vusername]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}\n                                    validations={[required, validEmail]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                    validations={[required, vpassword]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                            </div>\n                        </div>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div\n                                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\n                                role=\"alert\"\n                            >\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Login.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/BoardUser.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Profile.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/BoardAdmin.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/auth.service.js",["54"],"import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n    return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return axios\n        .post(API_URL + \"signin\", {\n            username,\n            password,\n        })\n        .then((response) => {\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n\n            return response.data;\n        });\n};\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n};","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/user.service.js",["55"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8080/api/test/\";\n\nconst getPublicContent = () => {\n    return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n    getPublicContent,\n    getUserBoard,\n    getAdminBoard,\n};","/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/services/auth-header.js",[],"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/serviceWorker.js",[],{"ruleId":"56","severity":1,"message":"57","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":36,"column":1,"nodeType":"62","endLine":41,"endColumn":3},{"ruleId":"60","severity":1,"message":"61","line":18,"column":1,"nodeType":"62","endLine":22,"endColumn":3},"no-unused-vars","'validator' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]