{"ast":null,"code":"var _jsxFileName = \"/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(() => {\n        props.history.push(\"/profile\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        ref: form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: password,\n            onChange: onChangePassword,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"hUho6peEgLW2/xnXxRqV2aabDB0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jackarthurstorror/ideaProjects/where/frontend/where/src/components/Login.js"],"names":["React","useState","useRef","Form","Input","CheckButton","AuthService","required","value","Login","props","form","checkBtn","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","onChangeUsername","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst Login = (props) => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        setMessage(\"\");\n        setLoading(true);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            AuthService.login(username, password).then(\n                () => {\n                    props.history.push(\"/profile\");\n                    window.location.reload();\n                },\n                (error) => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    setLoading(false);\n                    setMessage(resMessage);\n                }\n            );\n        } else {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleLogin} ref={form}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                            {loading && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                            <span>Login</span>\n                        </button>\n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}